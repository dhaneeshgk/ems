{
    "swagger": "2.0",
    "info": {
      "description": "This is swagger for EMS system",
      "version": "1.0.5",
      "title": "Swagger EMS",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "ems@swagger.io"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "127.0.0.1:5000",
    "basePath": "/",
    "tags": [
    ],
    "schemes": [
      "http"
    ],
    "paths": {
      "/employees": {
        "get": {
          "tags": [
            "employees"
          ],
          "summary": "gets the list of employees",
          "description": "",
          "operationId": "",
          "consumes": [],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "employee_id",
              "description": "ID of Employee",
              "required": false,
              "schema":{
                "type": "integer"
              }
            },
            {
              "name": "first_name",
              "in": "query",
              "description": "First Name of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "last_name",
              "in": "query",
              "description": "Last Name of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "email",
              "in": "query",
              "description": "Email Name of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "mobile_number",
              "in": "query",
              "description": "Mobile number of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "state",
              "in": "query",
              "description": "State of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "country",
              "in": "query",
              "description": "Country of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "filter_operator",
              "in": "query",
              "description": "filter operators and/or",
              "required": false,
              "schema":{
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "object",
                "properties":{
                  "employees":{
                    "type": "array",
                    "xml": {
                      "wrapped": true
                    },
                    "items": {
                      "xml": {
                        "name": "employees"
                      },
                      "$ref": "#/definitions/EmployeeUpdate"
                    }
                  },
                  "total_no_employees":{
                    "type":"integer"
                  }
                }
              }
            }
          },
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "employees"
          ],
          "summary": "To create employees records",
          "description": "",
          "operationId": "addEmployees",
          "consumes": [ "application/json", "application/xml","multipart/form-data"],
          "produces": [ "application/json", "application/xml", "multipart/form-data"],
          "parameters":[
            {
              "in":"body",
              "name":"body",
              "description": "Array of employee's records that needs to be added to the EMS",
              "type":"object",
              "required": [
                "employees_info"
              ],
              "properties":{
                "employees_info":{
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "xml": {
                      "name": "employees"
                    },
                    "$ref": "#/definitions/EmployeeCreate"
                  }
                }
              }
            },
            {
              "name": "employees_records",
              "in": "formData",
              "description": "csv file to upload",
              "required": false,
              "type": "file"
            }
          ],
          "responses": {
            "201": {
              "description": "successful operation",
              "schema": {
                "type": "object",
                "properties":{
                  "status":{
                    "type": "object",
                    "properties":{
                      "success":{
                        "type":"array",
                        "items":{
                          "xml": {
                            "name": "employees"
                          },
                          "$ref": "#/definitions/EmployeeRecordSuccessCreate"      
                        }
                      },
                      "fail":{
                        "type":"array",
                        "items":{
                          "xml": {
                            "name": "employees"
                          },
                          "$ref": "#/definitions/EmployeeRecordFailCreate"      
                        }
                      }
                    }
                  },
                  "metadata":{
                    "type":"object",
                    "properties":{
                      "success":{
                        "type":"integer"
                      },
                      "fail":{
                        "type":"integer"
                      },
                      "total":{
                        "type":"integer"
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "Invalid input"
            }
          }
        },
        "put": {
          "tags": [
            "employees"
          ],
          "summary": "To update employee's records",
          "description": "",
          "operationId": "addEmployees",
          "consumes": [ "application/json", "application/xml"],
          "produces": [ "application/json", "application/xml"],
          "parameters":[
            {
              "in":"body",
              "name":"body",
              "description": "Array of employees records that needs to be updapted in the EMS",
              "type":"object",
              "required": [
                "employees_info"
              ],
              "properties":{
                "employees_info":{
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "xml": {
                      "name": "employees"
                    },
                    "$ref": "#/definitions/EmployeeUpdate"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "successful operation",
              "schema": {
                "type": "object",
                "properties":{
                  "status":{
                    "type": "object",
                    "properties":{
                      "success":{
                        "type":"array",
                        "items":{
                          "xml": {
                            "name": "employees"
                          },
                          "$ref": "#/definitions/EmployeeRecordSuccessUpdate"      
                        }
                      },
                      "fail":{
                        "type":"array",
                        "items":{
                          "xml": {
                            "name": "employees"
                          },
                          "$ref": "#/definitions/EmployeeRecordFailUpdate"      
                        }
                      }
                    }
                  },
                  "metadata":{
                    "type":"object",
                    "properties":{
                      "success":{
                        "type":"integer"
                      },
                      "fail":{
                        "type":"integer"
                      },
                      "total":{
                        "type":"integer"
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "Invalid input"
            }
          }
        },
        "delete": {
          "tags": [
            "employees"
          ],
          "summary": "delete the list of employees matches criteria",
          "description": "",
          "operationId": "",
          "consumes": [],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "employee_id",
              "description": "ID of Employee",
              "required": false,
              "schema":{
                "type": "integer"
              }
            },
            {
              "name": "first_name",
              "in": "query",
              "description": "First Name of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "last_name",
              "in": "query",
              "description": "Last Name of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "email",
              "in": "query",
              "description": "Email Name of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "mobile_number",
              "in": "query",
              "description": "Mobile number of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "state",
              "in": "query",
              "description": "State of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "country",
              "in": "query",
              "description": "Country of Employee",
              "required": false,
              "schema":{
                "type": "string"
              }
            },
            {
              "name": "filter_operator",
              "in": "query",
              "description": "filter operators and/or",
              "required": false,
              "schema":{
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "object",
                "properties":{
                  "message":{
                    "type":"string",
                    "name":"Deleted sucessfully"
                  }
                }
              }
            }
          }
        }
      }
    },
    "definitions": {
      "EmployeeCreate": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Employee First Name"
          },
          "last_name": {
            "type": "string",
            "description": "Employee Last Name"
          },
          "email": {
            "type": "string",
            "description": "Employee Email ID"
          },
          "home_address": {
            "type": "string",
            "description": "Employee Home Address"
          },
          "mobile_number": {
            "type": "string",
            "description": "Employee Mobile Number"
          },
          "country": {
            "type": "string",
            "description": "Employee Country"
          },
          "state": {
            "type": "string",
            "description": "Employee State"
          }
        },
        "xml": {
          "name": "EmployeeCreate"
        }
      },
      "EmployeeUpdate": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "integer",
            "description": "Employee System generated ID"
          },
          "first_name": {
            "type": "string",
            "description": "Employee First Name"
          },
          "last_name": {
            "type": "string",
            "description": "Employee Last Name"
          },
          "email": {
            "type": "string",
            "description": "Employee Email ID"
          },
          "home_address": {
            "type": "string",
            "description": "Employee Home Address"
          },
          "mobile_number": {
            "type": "string",
            "description": "Employee Mobile Number"
          },
          "country": {
            "type": "string",
            "description": "Employee Country"
          },
          "state": {
            "type": "string",
            "description": "Employee State"
          }
        },
        "xml": {
          "name": "EmployeeUpdate"
        }
      },
      "EmployeeRecordSuccessUpdate": {
        "type":"object",
        "properties":{
          "record":{
            "type":"object",
            "$ref": "#/definitions/EmployeeUpdate"
          }
        },
        "xml": {
          "name": "EmployeeRecordSuccessUpdate"
        }
      },
      "EmployeeRecordFailUpdate": {
        "type":"object",
        "properties":{
          "record":{
            "type":"object",
            "$ref": "#/definitions/EmployeeUpdate"
          },
          "error":{
            "type":"string"
          }
        },
        "xml": {
          "name": "EmployeeRecordFailUpdate"
        }
      },
      "EmployeeRecordSuccessCreate": {
        "type":"object",
        "properties":{
          "record":{
            "type":"object",
            "$ref": "#/definitions/EmployeeCreate"
          }
        },
        "xml": {
          "name": "EmployeeRecordSuccessCreate"
        }
      },
      "EmployeeRecordFailCreate": {
        "type":"object",
        "properties":{
          "record":{
            "type":"object",
            "$ref": "#/definitions/EmployeeCreate"
          },
          "error":{
            "type":"string"
          }
        },
        "xml": {
          "name": "EmployeeRecordFailCreate"
        }
      }
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    }
  }